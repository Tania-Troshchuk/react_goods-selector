{"version":3,"sources":["goods.js","App.tsx","index.tsx"],"names":["App","state","selectedGood","selectGood","good","setState","prevState","removeGood","filter","clear","makeListInTitle","goods","length","slice","join","this","className","type","onClick","goodsFromServer","map","classNames","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sPAAe,G,MAAA,CACb,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,OCAWA,EAAb,4MACEC,MAAyB,CACvBC,aAAc,CAAC,QAFnB,EAKEC,WAAa,SAACC,GACZ,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BJ,aAAa,GAAD,mBAAMI,EAAUJ,cAAhB,CAA8BE,SAPhD,EAWEG,WAAa,SAACH,GACZ,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BJ,aAAc,YAAII,EAAUJ,cACzBM,QAAO,SAAAN,GAAY,OAAIE,IAASF,UAdzC,EAkBEO,MAAQ,WACN,EAAKJ,SAAS,CAAEH,aAAc,MAnBlC,EAsBEQ,gBAAkB,SAACC,GACjB,QAAQ,GACN,KAAMA,EAAMC,OACV,MAAO,oBAET,KAAsB,IAAjBD,EAAMC,OACT,MAAM,GAAN,OAAUD,EAAM,GAAhB,gBAEF,KAAKA,EAAMC,OAAS,EAClB,MAAM,GAAN,OAAUD,EAAME,MAAM,GAAI,GAAGC,KAAK,MAAlC,gBAA+CH,EAAME,OAAO,GAA5D,iBAEF,QACE,MAAO,KAlCf,4CAsCE,WAAU,IAAD,OACCX,EAAiBa,KAAKd,MAAtBC,aAER,OACE,uBAAMc,UAAU,MAAhB,UACE,yBAAQA,UAAU,cAAlB,UACE,oBAAIA,UAAU,mBAAd,SACGD,KAAKL,gBAAgBR,KAItBA,EAAaU,OAET,wBACEK,KAAK,SACLD,UAAU,gDACVE,QAAS,kBAAM,EAAKT,SAHtB,mBAQA,MAIR,6BACGU,EAAgBC,KAAI,SAAAhB,GAAI,OACvB,qBAEEY,UAAWK,IACT,OACA,CACE,eAAgBnB,EAAaoB,SAASlB,KAL5C,UASGA,EAEAF,EAAaoB,SAASlB,GAEnB,wBACEa,KAAK,SACLD,UAAU,mBACVE,QAAS,WACP,EAAKX,WAAWH,IAJpB,oBAUA,wBACEa,KAAK,SACLD,UAAU,oBACVE,QAAS,WACP,EAAKf,WAAWC,IAJpB,sBAtBCA,eAlEnB,GAAyBmB,IAAMC,WCP/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.af130b79.chunk.js","sourcesContent":["export default [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import classNames from 'classnames';\nimport React from 'react';\nimport './App.scss';\n\nimport goodsFromServer from './goods';\n\ntype State = {\n  selectedGood: string[],\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    selectedGood: ['Jam'],\n  };\n\n  selectGood = (good: string) => {\n    this.setState((prevState) => ({\n      selectedGood: [...prevState.selectedGood, good],\n    }));\n  };\n\n  removeGood = (good: string) => {\n    this.setState((prevState) => ({\n      selectedGood: [...prevState.selectedGood]\n        .filter(selectedGood => good !== selectedGood),\n    }));\n  };\n\n  clear = () => {\n    this.setState({ selectedGood: [] });\n  };\n\n  makeListInTitle = (goods: string[] | []) => {\n    switch (true) {\n      case !goods.length:\n        return 'No goods selected';\n\n      case goods.length === 1:\n        return `${goods[0]} is selected`;\n\n      case goods.length > 1:\n        return `${goods.slice(0, -1).join(', ')} and ${goods.slice(-1)} are selected`;\n\n      default:\n        return '';\n    }\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"App\">\n        <header className=\"App__header\">\n          <h1 className=\"App__title title\">\n            {this.makeListInTitle(selectedGood)}\n          </h1>\n\n          {\n            selectedGood.length\n              ? (\n                <button\n                  type=\"button\"\n                  className=\"App__clear button is-info is-light is-rounded\"\n                  onClick={() => this.clear()}\n                >\n                  Clear\n                </button>\n              )\n              : ''\n          }\n        </header>\n\n        <ul>\n          {goodsFromServer.map(good => (\n            <li\n              key={good}\n              className={classNames(\n                'Good',\n                {\n                  'Good--active': selectedGood.includes(good),\n                },\n              )}\n            >\n              {good}\n\n              {selectedGood.includes(good)\n                ? (\n                  <button\n                    type=\"button\"\n                    className=\"button is-danger\"\n                    onClick={() => {\n                      this.removeGood(good);\n                    }}\n                  >\n                    Remove\n                  </button>\n                ) : (\n                  <button\n                    type=\"button\"\n                    className=\"button is-success\"\n                    onClick={() => {\n                      this.selectGood(good);\n                    }}\n                  >\n                    Select\n                  </button>\n                )}\n            </li>\n          ))}\n        </ul>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}